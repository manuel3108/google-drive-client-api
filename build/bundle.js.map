{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/scriptjs/dist/script.js","../../node_modules/asap/asap.js","../../node_modules/promise/lib/core.js","../../node_modules/promise/lib/es6-extensions.js","../../node_modules/promise/lib/done.js","../../node_modules/promise/lib/node-extensions.js","../../node_modules/promise/index.js","../../node_modules/google-client-api/index.js","../../node_modules/google-drive-client-api/index.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      fn(el)\n      return 1\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n","\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\n\n// linked list of tasks (single, with head node)\nvar head = {task: void 0, next: null};\nvar tail = head;\nvar flushing = false;\nvar requestFlush = void 0;\nvar isNodeJS = false;\n\nfunction flush() {\n    /* jshint loopfunc: true */\n\n    while (head.next) {\n        head = head.next;\n        var task = head.task;\n        head.task = void 0;\n        var domain = head.domain;\n\n        if (domain) {\n            head.domain = void 0;\n            domain.enter();\n        }\n\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function() {\n                   throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    flushing = false;\n}\n\nif (typeof process !== \"undefined\" && process.nextTick) {\n    // Node.js before 0.9. Note that some fake-Node environments, like the\n    // Mocha test runner, introduce a `process` global without a `nextTick`.\n    isNodeJS = true;\n\n    requestFlush = function () {\n        process.nextTick(flush);\n    };\n\n} else if (typeof setImmediate === \"function\") {\n    // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n    if (typeof window !== \"undefined\") {\n        requestFlush = setImmediate.bind(window, flush);\n    } else {\n        requestFlush = function () {\n            setImmediate(flush);\n        };\n    }\n\n} else if (typeof MessageChannel !== \"undefined\") {\n    // modern browsers\n    // http://www.nonblocking.io/2011/06/windownexttick.html\n    var channel = new MessageChannel();\n    channel.port1.onmessage = flush;\n    requestFlush = function () {\n        channel.port2.postMessage(0);\n    };\n\n} else {\n    // old browsers\n    requestFlush = function () {\n        setTimeout(flush, 0);\n    };\n}\n\nfunction asap(task) {\n    tail = tail.next = {\n        task: task,\n        domain: isNodeJS && process.domain,\n        next: null\n    };\n\n    if (!flushing) {\n        flushing = true;\n        requestFlush();\n    }\n};\n\nmodule.exports = asap;\n\n","'use strict';\n\nvar asap = require('asap')\n\nmodule.exports = Promise;\nfunction Promise(fn) {\n  if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new')\n  if (typeof fn !== 'function') throw new TypeError('not a function')\n  var state = null\n  var value = null\n  var deferreds = []\n  var self = this\n\n  this.then = function(onFulfilled, onRejected) {\n    return new self.constructor(function(resolve, reject) {\n      handle(new Handler(onFulfilled, onRejected, resolve, reject))\n    })\n  }\n\n  function handle(deferred) {\n    if (state === null) {\n      deferreds.push(deferred)\n      return\n    }\n    asap(function() {\n      var cb = state ? deferred.onFulfilled : deferred.onRejected\n      if (cb === null) {\n        (state ? deferred.resolve : deferred.reject)(value)\n        return\n      }\n      var ret\n      try {\n        ret = cb(value)\n      }\n      catch (e) {\n        deferred.reject(e)\n        return\n      }\n      deferred.resolve(ret)\n    })\n  }\n\n  function resolve(newValue) {\n    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.')\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then\n        if (typeof then === 'function') {\n          doResolve(then.bind(newValue), resolve, reject)\n          return\n        }\n      }\n      state = true\n      value = newValue\n      finale()\n    } catch (e) { reject(e) }\n  }\n\n  function reject(newValue) {\n    state = false\n    value = newValue\n    finale()\n  }\n\n  function finale() {\n    for (var i = 0, len = deferreds.length; i < len; i++)\n      handle(deferreds[i])\n    deferreds = null\n  }\n\n  doResolve(fn, resolve, reject)\n}\n\n\nfunction Handler(onFulfilled, onRejected, resolve, reject){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null\n  this.resolve = resolve\n  this.reject = reject\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, onFulfilled, onRejected) {\n  var done = false;\n  try {\n    fn(function (value) {\n      if (done) return\n      done = true\n      onFulfilled(value)\n    }, function (reason) {\n      if (done) return\n      done = true\n      onRejected(reason)\n    })\n  } catch (ex) {\n    if (done) return\n    done = true\n    onRejected(ex)\n  }\n}\n","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js')\nvar asap = require('asap')\n\nmodule.exports = Promise\n\n/* Static Functions */\n\nfunction ValuePromise(value) {\n  this.then = function (onFulfilled) {\n    if (typeof onFulfilled !== 'function') return this\n    return new Promise(function (resolve, reject) {\n      asap(function () {\n        try {\n          resolve(onFulfilled(value))\n        } catch (ex) {\n          reject(ex);\n        }\n      })\n    })\n  }\n}\nValuePromise.prototype = Promise.prototype\n\nvar TRUE = new ValuePromise(true)\nvar FALSE = new ValuePromise(false)\nvar NULL = new ValuePromise(null)\nvar UNDEFINED = new ValuePromise(undefined)\nvar ZERO = new ValuePromise(0)\nvar EMPTYSTRING = new ValuePromise('')\n\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value\n\n  if (value === null) return NULL\n  if (value === undefined) return UNDEFINED\n  if (value === true) return TRUE\n  if (value === false) return FALSE\n  if (value === 0) return ZERO\n  if (value === '') return EMPTYSTRING\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value))\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex)\n      })\n    }\n  }\n\n  return new ValuePromise(value)\n}\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr)\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([])\n    var remaining = args.length\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then\n          if (typeof then === 'function') {\n            then.call(val, function (val) { res(i, val) }, reject)\n            return\n          }\n        }\n        args[i] = val\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex)\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i])\n    }\n  })\n}\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) { \n    reject(value);\n  });\n}\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) { \n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    })\n  });\n}\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n}\n","'use strict';\n\nvar Promise = require('./core.js')\nvar asap = require('asap')\n\nmodule.exports = Promise\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this\n  self.then(null, function (err) {\n    asap(function () {\n      throw err\n    })\n  })\n}","'use strict';\n\n//This file contains then/promise specific extensions that are only useful for node.js interop\n\nvar Promise = require('./core.js')\nvar asap = require('asap')\n\nmodule.exports = Promise\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  argumentCount = argumentCount || Infinity\n  return function () {\n    var self = this\n    var args = Array.prototype.slice.call(arguments)\n    return new Promise(function (resolve, reject) {\n      while (args.length && args.length > argumentCount) {\n        args.pop()\n      }\n      args.push(function (err, res) {\n        if (err) reject(err)\n        else resolve(res)\n      })\n      var res = fn.apply(self, args)\n      if (res && (typeof res === 'object' || typeof res === 'function') && typeof res.then === 'function') {\n        resolve(res)\n      }\n    })\n  }\n}\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments)\n    var callback = typeof args[args.length - 1] === 'function' ? args.pop() : null\n    var ctx = this\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx)\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) { reject(ex) })\n      } else {\n        asap(function () {\n          callback.call(ctx, ex)\n        })\n      }\n    }\n  }\n}\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value)\n    })\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err)\n    })\n  })\n}\n","'use strict';\n\nmodule.exports = require('./lib/core.js')\nrequire('./lib/done.js')\nrequire('./lib/es6-extensions.js')\nrequire('./lib/node-extensions.js')","/** @module google-client-api */\n\nvar scriptjs = require( 'scriptjs' ),\n\tpromise = require( 'promise' );\n\nvar callbacks = [];\n\nglobal.$$onClientLoad = function() {\n\n\tfor( var i = 0, len = callbacks.length; i < len; i++ ) {\n\n\t\tdoResolve.apply( undefined, callbacks[ i ] );\n\t}\n};\n\nfunction doResolve( resolve, onComplete ) {\n\n\tresolve( global.gapi );\n\n\tif( onComplete )\n\t\tonComplete( global.gapi );\n}\n\n\n/** \n * This module is a function which will return a Google Client API object \n * (https://developers.google.com/api-client-library/javascript/dev/dev_jscript) assynchronously.\n *\n * This function returns a promise. (if you're into promises) Which will return the gapi Object.\n *\n * If you're not into promises then you can simply call this function and pass in a callback object.\n * \n * @param  {Function} onComplete an optional callback which will return the Google Client API Object.\n * @return {Promise} This function also returns a promise if you're into promises which will\n *                   return the Google Client API Object.\n *\n * @example Using with Promise\n * require( 'google-client-api' )().then( function( gapi ) {\n * \t// Do something with the gapi object\n * });\n *\n * @example Using with callback\n * require( 'google-client-api' )( function( gapi ) {\n * \t// Do something with the gapi object\n * });\n */\nmodule.exports = function( onComplete ) {\n\n\treturn new promise( function( resolve, reject ) {\n\n\t\tif( global.gapi ) {\n\n\t\t\tdoResolve( resolve, onComplete );\n\t\t} else {\n\n\t\t\tcallbacks.push( [ resolve, onComplete ] );\n\n\t\t\tif( callbacks.length == 1 ) {\n\n\t\t\t\tscriptjs( 'https://apis.google.com/js/client.js?onload=$$onClientLoad' );\n\t\t\t}\n\t\t}\n\t});\n};","let gapi = require('google-client-api')\nlet api;\n\nmodule.exports.load = (client_id, discovery_docs, scopes) => {\n    return new Promise((resolve) => {\n        gapi((google_api) => {\n            api = google_api;\n            api.load('client:auth2', () => {\n                api.client.init({\n                    clientId: client_id,\n                    discoveryDocs: discovery_docs,\n                    scope: scopes\n                }).then(() => {\n                    api.client.load('drive', 'v3', () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});                  \n                });\n            });\n        })\n    });\n}\n\nmodule.exports.login = () => {\n    return new Promise((resolve) => {\n        api.auth2.getAuthInstance().signIn().then(() => {\n            resolve();\n        });\n    });\n}\n\nmodule.exports.isLoggedIn = () => {\n    return api.auth2.getAuthInstance().isSignedIn.get();\n};\n\nmodule.exports.list = () => {\n    return api.client.drive.files.list({\n        spaces: 'appDataFolder'\n    })\n}\n\nmodule.exports.create = (name) => {\n    return api.client.drive.files.create({\n      resource: {\n        name: name,\n        parents: ['appDataFolder']\n      },\n      fields: 'id'\n    });\n}\n\nmodule.exports.update = (fileId, content) => {\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = 'json';\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState != XMLHttpRequest.DONE) {\n        return;\n      }\n      console.log(xhr.response);\n    };\n    xhr.open('PATCH', 'https://www.googleapis.com/upload/drive/v3/files/' + fileId + '?uploadType=media');\n    xhr.setRequestHeader('Authorization', 'Bearer ' + api.auth.getToken().access_token);\n    xhr.send(content);\n  }\n\nmodule.exports.download = (id) => {\n    return api.client.drive.files.get({\n        fileId: id,\n        alt: 'media',\n    })\n}\n\nmodule.exports.delete = (id) => {\n    return api.client.drive.files.delete({\n        'fileId': id\n    });\n  }","<script>\n\timport drive from 'google-drive-client-api'\n\n\tlet apiLoadedText = \"Load api\";\n\tlet isLoggedInText = \"Check login\"\n\tlet loginText = \"log in\"\n\tlet createText = \"Upload me\"\n\tlet listText = \"list all files\"\n\tlet files = [];\n\n\tfunction load() {\n\t\tdrive.load(\"1004447507607-hc0eguhn4cnupcdmpptutifvi1g6g5pn.apps.googleusercontent.com\", [], \"https://www.googleapis.com/auth/drive.appdata\").then(() => {\n\t\t\tapiLoadedText = \"Success!\"\n\t\t});\n    }\n\n\tfunction isLoggedIn() {\n\t\tif(drive.isLoggedIn()) {\n\t\t\tisLoggedInText = \"You are logged in\"\n\t\t\tloginText = \"Success!\"\n\t\t} else {\n\t\t\tisLoggedInText = \"not logged in\"\n\t\t}\n\t}\n\n    function login() {\n        drive.login().then(() => {\n\t\t\tloginText = \"Success!\"\n\t\t})\n\t}\n\t\n\tfunction create() {\n\t\tcreateText = \"Creating file...\"\n\t\tdrive.create(\"test-file.json\").then((data) => {\n\t\t\tlet fileId = data.result.id;\n\t\t\tcreateText = \"Created file with id \" + fileId;\n\t\t\tdrive.update(fileId, \"Test-Content\")\n\t\t});\n\t}\n\n\tfunction list() {\n\t\tdrive.list().then((data) => {\n\t\t\tfiles = data.result.files;\n\t\t\tlistText = files.length + \" file(s) shown below\"\n\n\t\t\tfiles.forEach(file => {\n\t\t\t\tdrive.download(file.id).then((data) => {\n\t\t\t\t\tfile.content = data.body;\n\t\t\t\t\tfiles = files;\n\t\t\t\t})\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction deleteFile(id) {\n\t\tdrive.delete(id).then(() => {\n\t\t\tconsole.log(\"file deleted\")\n\t\t\tlist();\n\t\t});\n\t}\n</script>\n\n1. Load the drive api: <button on:click={load}>{apiLoadedText}</button><br>\n2. Check login status: <button on:click={isLoggedIn}>{isLoggedInText}</button><br>\n3. if not logged in: login: <button on:click={login}>{loginText}</button><br>\n4. upload file: <button on:click={create}>{createText}</button><br>\n5. list files: <button on:click={list}>{listText}</button><br>\n{#each files as file,i}\n\tFile {i}: id: {file.id} name: {file.name}\n\t<button on:click={() => deleteFile(file.id)}>Delete</button>\n\tContent: {file.content}\n\t<br>\n{/each}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","set_data","wholeText","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_mount","on_destroy","context","Map","callbacks","ready","ret","rest","value","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","definition","module","exports","this","scriptpath","urlArgs","doc","head","getElementsByTagName","list","delay","scripts","every","ar","j","each","el","$script","paths","idOrDone","optDone","idOrDoneIsDone","call","done","id","join","queue","loopFn","item","dset","split","setTimeout","loading","path","force","test","indexOf","loaded","onload","onerror","async","src","lastChild","get","order","s","shift","str","deps","req","key","missing","dep","task","next","tail","requestFlush","isNodeJS","domain","enter","e","exit","process","nextTick","setImmediate","window","bind","MessageChannel","channel","port1","onmessage","port2","postMessage","TypeError","state","deferreds","self","handle","deferred","asap","cb","onFulfilled","onRejected","reject","newValue","finale","len","constructor","Handler","doResolve","reason","ex","ValuePromise","prototype","arguments","apply","err","TRUE","FALSE","NULL","UNDEFINED","undefined","ZERO","EMPTYSTRING","all","arr","args","slice","remaining","res","val","race","values","denodeify","argumentCount","Infinity","nodeify","require$$0","onComplete","global","gapi","$$onClientLoad","api","client_id","discovery_docs","scopes","google_api","load","client","clientId","discoveryDocs","scope","promise","scriptjs","auth2","getAuthInstance","signIn","isSignedIn","drive","files","spaces","resource","parents","fields","fileId","content","xhr","XMLHttpRequest","responseType","onreadystatechange","readyState","DONE","console","log","response","open","setRequestHeader","auth","getToken","access_token","send","alt","iterations","detaching","d","apiLoadedText","isLoggedInText","loginText","createText","listText","result","file","body","deleteFile","[object Object]","destroy_component","$destroy","type","index","splice"],"mappings":"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"}